,model,accuracy,roc_auc,y_pred,y_pred_proba
RandomForest,"RandomForestClassifier(class_weight='balanced', random_state=42)",0.7083333333333334,0.5125000000000001,[0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1],"[0.24 0.83 0.07 0.21 0.65 0.31 0.24 0.24 0.25 0.5  0.12 0.13 0.19 0.53
 0.71 0.11 0.4  0.25 0.31 0.22 0.18 0.15 0.41 0.55]"
LogisticRegression,"LogisticRegression(class_weight='balanced', max_iter=1000, random_state=42)",0.5,0.28750000000000003,[0 0 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 1 1 0 1 0 0 1],"[0.40238416 0.4753629  0.5052233  0.43299735 0.52554325 0.42064408
 0.56434678 0.51350224 0.42898224 0.46336611 0.46874607 0.55629443
 0.42461449 0.50100183 0.48681123 0.49731342 0.47311475 0.51050221
 0.51068387 0.49118366 0.53217884 0.45344852 0.48625533 0.57908779]"
SVM,"SVC(class_weight='balanced', probability=True, random_state=42)",0.625,0.6,[0 1 0 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1],"[0.45384389 0.2783199  0.45231849 0.34292161 0.26737514 0.34410076
 0.4457998  0.43696125 0.31006041 0.38794727 0.4382525  0.44793922
 0.39082931 0.29940168 0.33149689 0.42202324 0.34927622 0.40158057
 0.39378718 0.37511465 0.33301693 0.37111442 0.38994128 0.29082628]"
DecisionTree,"DecisionTreeClassifier(class_weight='balanced', random_state=42)",0.625,0.475,[0 1 0 0 1 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1],[0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
